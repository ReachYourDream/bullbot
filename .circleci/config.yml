# CircleCI configuration
# see: https://circleci.com/docs/2.0/configuration-reference/

# The "setup" job clones pajbot and initializes the virtual environment and then saves
# the entire working directory to the cache.
# The "test" and "lint" jobs then fan out in parallel, restore the cache that "setup" produced
# (using the load_setup command defined below) and run their respective command.

version: 2.1
executors:
  pajbot:
    docker:
      - image: circleci/python:3.7
    working_directory: ~/pajbot
commands:
  load_setup:
    description: "Load the cache that the \"setup\" job produced."
    steps:
      - restore_cache:
          keys:
            - v1-setup-{{ .Environment.CIRCLE_SHA1 }}
jobs:
  setup:
    executor: pajbot
    steps:
      - checkout
      - restore_cache:
          name: Restore cached virtual environment
          key: v1-python3.7-{{ checksum "requirements.txt" }}
      - run:
          name: Create virtual environment
          command: python -m venv venv
      - run:
          name: Upgrade pip
          command: ./venv/bin/pip install --upgrade pip
      - run:
          name: Install requirements into virtual environment
          command: ./venv/bin/pip install --progress-bar off -r requirements.txt
      - save_cache:
          name: Save virtual environment to cache
          key: v1-python3.7-{{ checksum "requirements.txt" }}
          paths:
            - ./venv
      - save_cache:
          name: Save created project dir to cache for other jobs to use
          key: v1-setup-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            # working directory (entire project directory)
            - .
  test:
    executor: pajbot
    steps:
      - load_setup
      - run:
          name: Run tests
          command: ./venv/bin/pytest
  lint:
    executor: pajbot
    steps:
      - load_setup
      - run:
          name: Run flake8 (lint)
          command: ./venv/bin/flake8

# add one workflow that runs all jobs in parallel
workflows:
  version: 2
  run-all:
    jobs:
      - setup
      - test:
          requires:
            - setup
      - lint:
          requires:
            - setup